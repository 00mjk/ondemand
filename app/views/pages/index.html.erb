<style type="text/css" media="screen">
  #editor {
    margin: 0;
    position: absolute;
    top: 100px;
    bottom: 0;
    left: 0;
    right: 0;
  }

</style>

<% if @editor_content %>
  <pre id="editor"></pre>

<% elsif @directory_content %>
    <h3>Select a file to edit:</h3>
    <h4><%= @pathname %></h4>
    <ul class="list-group">
      <%= "<li class='list-group-item small'><a href='#{File.join(@file_edit_url, @pathname.dirname)}'>..</a></li>".html_safe unless @pathname.dirname.to_s == "/" %>
      <% @directory_content.each do |path| %>
          <li class="list-group-item small">
            <%= "<a href='#{File.join(@file_edit_url, path)}'>#{Pathname.new(path).basename}</a>".html_safe %>
          </li>
      <% end %>
    </ul>

<% end %>

<script src="<%= "#{ENV['RAILS_RELATIVE_URL_ROOT']}/ace-src-min-noconflict/ace.js" %>" type="text/javascript" charset="utf-8"></script>
<script>
  var editorContent = "";
  var apiUrl = "<%= @file_api_url %>";

  <% if @editor_content %>
    var editor = ace.edit("editor");
    editor.setTheme( $( "#theme option:selected" ).val() );
    editor.session.setMode( "ace/mode/" + $( "#mode option:selected" ).val() );

    var loadedContent = $.ajax({
      url: apiUrl,
      type: 'GET',
      success: function (data) {
        console.log(data);
        editorContent = data;
        editor.setValue(editorContent, -1);
      },
      error: function (request, status, error) {
        console.log(request);
        console.log(status);
        console.log(error);
      }
    });
  <% end %>

  // Change the font size
  $( "#fontsize" ).change(function() {
    editor.setFontSize( $( "#fontsize option:selected" ).val() );
    // TODO Save setting to cookie
  });

  // Change the key bindings
  $( "#keybindings" ).change(function() {
    editor.setKeyboardHandler( $( "#keybindings option:selected" ).val() );
    // TODO Save setting to cookie
  });

  $( "#theme" ).change(function() {
    editor.setTheme( $( "#theme option:selected" ).val() );
    // TODO Save setting to cookie
  });

  $( "#mode" ).change(function() {
    editor.getSession().setMode( "ace/mode/" + $( "#mode option:selected" ).val() );
    // TODO Save setting to cookie
  });

  $( "#wordwrap" ).change(function() {
    editor.getSession().setUseWrapMode(this.checked);
    // TODO Save setting to cookie
  });

  $( "#reset-button" ).click(function() {
    editor.setValue(editorContent, -1);
  });

  // TODO remove the console logging
  $( "#save-button" ).click(function() {
    if (apiUrl !== "") {
      $.ajax({
        url: apiUrl,
        type: 'PUT',
        data: editor.getValue(),
        success: function (data) {
          $( "#save-button" ).fadeOut(function() {
            $( "#save-button" ).html('<span class="glyphicon glyphicon-saved" aria-hidden="true"></span> Saved!').fadeIn();
            setTimeout(function() {
              $( "#save-button" ).fadeOut(function() {
                $("#save-button").html('<span class="glyphicon glyphicon-save" aria-hidden="true"></span> Save').fadeIn();
              })
            }, 2000);
          });


        },
        error: function (request, status, error) {
          console.log(request);
          console.log(status);
          console.log(error);
        } 
      })
    } else {
      console.log("Not valid");
    }
  });

</script>

