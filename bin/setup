#!/usr/bin/env ruby
require "pathname"
require "rake"

include FileUtils

ENV["RAILS_ENV"]               ||= ENV["PASSENGER_APP_ENV"] || "development"
ENV["RAILS_RELATIVE_URL_ROOT"] ||= ENV["PASSENGER_BASE_URI"]

# path to your application root.
APP_ROOT = Pathname.new File.expand_path("../../",  __FILE__)

# application settings
OOD_ENV    = ENV["RAILS_ENV"]
OOD_URL    = ENV["RAILS_RELATIVE_URL_ROOT"]
OOD_SITE   = ENV["OOD_SITE"]
OOD_PORTAL = ENV["OOD_PORTAL"]

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  ood_site   = OOD_SITE
  ood_portal = OOD_PORTAL
  ood_url    = OOD_URL

  # Read in OOD_SITE and/or OOD_PORTAL if defined in .env.local
  if File.exist?(".env.local")
    unless ood_site
      tmp = `bash -c 'source .env.local && echo $OOD_SITE'`.strip
      ood_site = tmp unless tmp.empty?
    end

    unless ood_portal
      tmp = `bash -c 'source .env.local && echo $OOD_PORTAL'`.strip
      ood_portal = tmp unless tmp.empty?
    end
  end

  # Read in RAILS_RELATIVE_URL_ROOT if defined in .env.production
  if OOD_ENV == "production" && File.exist?(".env.production")
    tmp = `bash -c 'source .env.production && echo $RAILS_RELATIVE_URL_ROOT'`.strip
    ood_url = tmp unless tmp.empty?
  end

  puts "\n== Building Dashboard App =="
  puts "RAILS_ENV               = #{OOD_ENV}"
  puts "RAILS_RELATIVE_URL_ROOT = #{ood_url    || "not set"}"
  puts "OOD_SITE                = #{ood_site   || "not set (default: none)"}"
  puts "OOD_PORTAL              = #{ood_portal || "not set (default: none)"}"

  unless system("bin/bundle check &> /dev/null")
    puts "\n== Installing dependencies =="
    sh "bin/bundle install --deployment"
    sh "bin/bundle clean"
  end

  if ood_site && ood_portal
    puts "\n== Enabling portal specific settings =="

    # .env.local
    source_file = ".env.local.#{ood_site}.#{ood_portal}"
    target_file = ".env.local"
    # Copy source file to target file if it exists or user directly requested
    # it by setting an environment variable
    if OOD_SITE || OOD_PORTAL || File.exist?(source_file)
      cp source_file, target_file unless system("cmp -s #{source_file} #{target_file}")
    end

    # config/initializers/ood.rb
    source_file = "config/initializers/ood.rb.#{ood_site}.#{ood_portal}"
    target_file = "config/initializers/ood.rb"
    # Copy source file to target file if it exists or user directly requested
    # it by setting an environment variable
    if OOD_SITE || OOD_PORTAL || File.exist?(source_file)
      cp source_file, target_file unless system("cmp -s #{source_file} #{target_file}")
    end
  else
    puts "\n== Ignoring portal specific settings =="
  end

  if OOD_ENV == "production"
    puts "\n== Compiling assets =="
    sh "bin/rake assets:clobber"
    sh "bin/rake assets:precompile"
  end

  puts "\n== Removing old logs and tempfiles =="
  sh "bin/rake log:clear tmp:clear"

  puts "\n== Restarting application server =="
  touch "tmp/restart.txt"
  puts ""
end
