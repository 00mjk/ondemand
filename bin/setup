#!/usr/bin/env ruby
require "pathname"
require "ostruct"
require "rake"

include FileUtils

ENV["RAILS_ENV"]               ||= ENV["PASSENGER_APP_ENV"] || "development"
ENV["RAILS_RELATIVE_URL_ROOT"] ||= ENV["PASSENGER_BASE_URI"]

# application settings
APP = OpenStruct.new({
  env:    ENV["RAILS_ENV"],
  url:    ENV["RAILS_RELATIVE_URL_ROOT"],
  site:   ENV["OOD_SITE"],
  portal: ENV["OOD_PORTAL"]
})

# path to your application root.
APP_ROOT = Pathname.new File.expand_path("../../",  __FILE__)

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  # Read in OOD_SITE and OOD_PORTAL if defined in .env.local
  if File.exist?(".env.local")
    unless APP.site
      tmp = `bash -c 'source .env.local && echo $OOD_SITE'`.strip
      APP.site = tmp unless tmp.empty?
    end

    unless APP.portal
      tmp = `bash -c 'source .env.local && echo $OOD_PORTAL'`.strip
      APP.portal = tmp unless tmp.empty?
    end
  end

  # Read in RAILS_RELATIVE_URL_ROOT if defined in .env.production
  if APP.env == "production" && File.exist?(".env.production")
    unless APP.url
      tmp = `bash -c 'source .env.production && echo $RAILS_RELATIVE_URL_ROOT'`.strip
      APP.url = tmp unless tmp.empty?
    end
  end

  puts "\n== Building Dashboard App =="
  puts "RAILS_ENV               = #{APP.env}"
  puts "RAILS_RELATIVE_URL_ROOT = #{APP.url    || "not set"}"
  puts "OOD_SITE                = #{APP.site   || "not set (default: none)"}"
  puts "OOD_PORTAL              = #{APP.portal || "not set (default: none)"}"

  unless system("bin/bundle check &> /dev/null")
    puts "\n== Installing dependencies =="
    sh "bin/bundle install --path=vendor/bundle"
    sh "bin/bundle clean"
  end

  if APP.site && APP.portal
    puts "\n== Enabling portal specific settings =="

    # .env.local
    source_file = ".env.local.#{APP.site}.#{APP.portal}"
    target_file = ".env.local"
    # Copy source file to target file if it exists
    if File.exist?(source_file)
      unless system("cmp -s #{source_file} #{target_file}")
        cp source_file, target_file
      else
        puts "skip copying (no changes detected): #{source_file} => #{target_file}"
      end
    else
      puts "skip copying (does not exist): #{source_file} => #{target_file}"
    end

    # config/initializers/ood.rb
    source_file = "config/initializers/ood.rb.#{APP.site}.#{APP.portal}"
    target_file = "config/initializers/ood.rb"
    # Copy source file to target file if it exists
    if File.exist?(source_file)
      unless system("cmp -s #{source_file} #{target_file}")
        cp source_file, target_file
      else
        puts "skip copying (no changes detected): #{source_file} => #{target_file}"
      end
    else
      puts "skip copying (does not exist): #{source_file} => #{target_file}"
    end
  end

  if APP.env == "production"
    puts "\n== Compiling assets =="
    sh "bin/rake assets:clobber"
    sh "bin/rake assets:precompile"
  end

  puts "\n== Removing old logs and tempfiles =="
  sh "bin/rake log:clear tmp:clear"

  puts "\n== Restarting application server =="
  touch "tmp/restart.txt"
  puts ""
end
