# OOD Portal Configuration
#
# This is where the Open OnDemand portal is defined. There should only be a
# single portal per Apache server. Below you can find definitions for the OSC
# OnDemand portal. Feel free to modify any of the definitions below to meet
# your needs.
#

#
# Server specific properties
#

# IP used for Open OnDemand portal
#
Define OOD_IP '*:7000'

# Subdomain used for the Open OnDemand portal
#
Define OOD_SUBDOMAIN 'apps.ondemand.org'


#
# System specific options
#

# Path to the Open OnDemand Lua scripts
#
Define OOD_LUA_ROOT '/nfs/17/jnicklas/Tests/w8/httpd/mod_lua_proxy/src'

# Command used to stage PUNs
#
Define OOD_PUN_STAGE_CMD 'sudo /opt/ood/nginx_stage/sbin/nginx_stage_dev --config /nfs/17/jnicklas/Development/nginx_stage/config.yml --'

# Command used to map users to system level users
#
Define OOD_USER_MAP_CMD '/nfs/17/jnicklas/Tests/w8/httpd/mapper'

# Path to the root location of PUN socket files
#
Define OOD_PUN_SOCKET_ROOT '/var/tmp/nginx_stage0/var/run/nginx'

# Path to publicly available assets
#
Define OOD_PUBLIC_ROOT '/nfs/gpfs/PZS0645/www/public'


#
# URIs used for the various Open OnDemand features
#

# Reverse proxy to backend PUNs
#
Define OOD_PUN_URI '/pun'

# Control the backend PUN (e.g., start, stop, reload, ...)
#
Define OOD_NGINX_URI '/nginx'

# Serve up publicly available assets
#
Define OOD_PUBLIC_URI '/public'
