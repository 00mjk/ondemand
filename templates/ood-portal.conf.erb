#
# Open OnDemand Portal
#
# Generated using template v0.3.0
#

<% if @listen_addr_port -%>
# Listen should always be one of:
#     - <port>
#     - <ipv4>:<port>
#     - <ipv6>:<port>
#
Listen <%= @listen_addr_port %>
<% end -%>

<%# Set default URI values used for redirecting     -%>
<% _scheme = @ssl ? "https" : "http"                -%>
<% _host   = @servername || @ip || "%{SERVER_NAME}" -%>
<% _port   = @port || (@ssl ? "443" : "80")         -%>

<% if @ssl -%>
# Redirect all http traffic to the https Open OnDemand portal URI
#     http://*:<%= _port %>
#     #=> <%= _scheme %>://<%= _host %>:<%= _port %>
#
<VirtualHost *:80>
  RewriteEngine On
  RewriteRule ^/?(.*) <%= _scheme %>://<%= _host %>:<%= _port %>/$1 [R=301,L]
</VirtualHost>
<% end -%>

<% if @ip || @servername -%>
# Redirect any traffic on port <%= _port %> to the Open OnDemand portal URI,
# other than traffic explicitly sent to the portal
#     <%= _scheme %>://*:<%= _port %>
#     #=> <%= _scheme %>://<%= _host %>:<%= _port %>
#
<VirtualHost *:<%= _port %>>
  RewriteEngine On
  RewriteRule ^/?(.*) <%= _scheme %>://<%= _host %>:<%= _port %>/$1 [R=301,L]

  <%- if @ssl -%>
  SSLEngine On
  <%- @ssl.each do |line| -%>
  <%= line %>
  <%- end -%>
  <%- end -%>
</VirtualHost>
<% end -%>

<% if @ip && @servername -%>
# Redirect any traffic on <%= @ip %>:<%= _port %> to the Open OnDemand portal URI,
# other than traffic explicitly sent to the portal
#     <%= _scheme %>://<%= @ip %>:<%= _port %>
#     #=> <%= _scheme %>://<%= _host %>:<%= _port %>
#
<VirtualHost <%= @ip %>:<%= _port %>>
  RewriteEngine On
  RewriteRule ^/?(.*) <%= _scheme %>://<%= _host %>:<%= _port %>/$1 [R=301,L]

  <%- if @ssl -%>
  SSLEngine On
  <%- @ssl.each do |line| -%>
  <%= line %>
  <%- end -%>
  <%- end -%>
</VirtualHost>
<% end -%>

# The Open OnDemand portal VirtualHost
#
<VirtualHost <%= @ip || "*" %>:<%= _port %>>
  <%- if @servername -%>
  ServerName <%= @servername %>

  ErrorLog  "<%= @logroot %>/<%= @servername %>_error<%= "_ssl" if @ssl %>.log"
  CustomLog "<%= @logroot %>/<%= @servername %>_access<%= "_ssl" if @ssl %>.log" combined
  <%- end -%>

  <%- if @ssl -%>
  SSLEngine On
  <%- @ssl.each do |line| -%>
  <%= line %>
  <%- end -%>
  <%- end -%>

  # Lua configuration
  #
  <%- if @lua_root -%>
  LuaRoot "<%= @lua_root %>"
  <%- end -%>
  <%- if @lua_log_level -%>
  LogLevel lua_module:<%= @lua_log_level %>
  <%- end -%>

  # Authenticated-user to system-user mapping configuration
  #
  SetEnv OOD_USER_MAP_CMD "<%= @user_map_cmd %>"
  <%- if @map_fail_uri -%>
  SetEnv OOD_MAP_FAIL_URI "<%= @map_fail_uri %>"
  <%- end -%>

  # Per-user Nginx (PUN) configuration
  # NB: Apache will need sudo privs to control the PUNs
  #
  SetEnv OOD_PUN_STAGE_CMD "<%= @pun_stage_cmd %>"

  #
  # Below is used for sub-uri's this Open OnDemand portal supports
  #

  <%- if @public_uri && @public_root -%>
  # Serve up publicly available assets from local file system:
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @public_uri %>/favicon.ico
  #     #=> <%= @public_root %>/favicon.ico
  #
  Alias "<%= @public_uri %>" "<%= @public_root %>"
  <Directory "<%= @public_root %>">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  <%- end -%>

  <%- if @node_uri -%>
  # Reverse proxy traffic to backend webserver through IP sockets:
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @node_uri %>/HOST/PORT/index.html
  #     #=> http://HOST:PORT<%= @node_uri %>/HOST/PORT/index.html
  #
  <LocationMatch "^<%= @node_uri %>/(?<host><%= @host_regex %>)/(?<port>\d+)">
    <%- @auth.each do |line| -%>
    <%= line %>
    <%- end -%>

    # ProxyPassReverse implementation
    Header edit Location "^[^/]+//[^/]+" ""

    # ProxyPassReverseCookieDomain implemenation
    Header edit* Set-Cookie ";\s*(?i)Domain[^;]*" ""

    # ProxyPassReverseCookiePath implementation
    Header edit* Set-Cookie ";\s*(?i)Path[^;]*" ""
    Header edit  Set-Cookie "^([^;]+)" "$1; Path=<%= @node_uri %>/%{MATCH_HOST}e/%{MATCH_PORT}e"

    LuaHookFixups node_proxy.lua node_proxy_handler
  </LocationMatch>
  <%- end -%>

  <%- if @rnode_uri -%>
  # Reverse "relative" proxy traffic to backend webserver through IP sockets:
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @rnode_uri %>/HOST/PORT/index.html
  #     #=> http://HOST:PORT/index.html
  #
  <LocationMatch "^<%= @rnode_uri %>/(?<host><%= @host_regex || "[^/]+" %>)/(?<port>\d+)(?<uri>/.*|)">
    <%- @auth.each do |line| -%>
    <%= line %>
    <%- end -%>

    # ProxyPassReverse implementation
    Header edit Location "^([^/]+//[^/]+)|(?=/)" "<%= @rnode_uri %>/%{MATCH_HOST}e/%{MATCH_PORT}e"

    # ProxyPassReverseCookieDomain implemenation
    Header edit* Set-Cookie ";\s*(?i)Domain[^;]*" ""

    # ProxyPassReverseCookiePath implementation
    Header edit* Set-Cookie ";\s*(?i)Path[^;]*" ""
    Header edit  Set-Cookie "^([^;]+)" "$1; Path=<%= @rnode_uri %>/%{MATCH_HOST}e/%{MATCH_PORT}e"

    LuaHookFixups node_proxy.lua node_proxy_handler
  </LocationMatch>
  <%- end -%>

  <%- if @pun_uri && @nginx_uri -%>
  # Reverse proxy traffic to backend PUNs through Unix domain sockets:
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @pun_uri %>/dev/app/simulations/1
  #     #=> unix:/path/to/socket|http://localhost<%= @pun_uri %>/dev/app/simulations/1
  #
  SetEnv OOD_PUN_URI "<%= @pun_uri %>"
  <Location "<%= @pun_uri %>">
    <%- @auth.each do |line| -%>
    <%= line %>
    <%- end -%>

    ProxyPassReverse "http://localhost<%= @pun_uri %>"
    <%- if @ip || @servername -%>
    ProxyPassReverseCookieDomain "localhost" "<%= _host %>"
    <%- end -%>

    # ProxyPassReverseCookiePath implementation (less restrictive)
    Header edit* Set-Cookie ";\s*(?i)Path\s*=(?-i)(?!\s*<%= @pun_uri %>)[^;]*" "; Path=<%= @pun_uri %>"

    SetEnv OOD_PUN_SOCKET_ROOT "<%= @pun_socket_root %>"
    SetEnv OOD_PUN_MAX_RETRIES "<%= @pun_max_retries %>"
    LuaHookFixups pun_proxy.lua pun_proxy_handler

    <%- if @analytics -%>
    SetEnv OOD_ANALYTICS_TRACKING_URL "<%= @analytics['url'] %>"
    SetEnv OOD_ANALYTICS_TRACKING_ID  "<%= @analytics['id']  %>"
    LuaHookLog analytics.lua analytics_handler
    <%- end -%>
  </Location>

  # Control backend PUN for authenticated user:
  # NB: See mod_ood_proxy for more details.
  #
  #    <%= _scheme %>://<%= _host %>:<%= _port %><%= @nginx_uri %>/stop
  #    #=> stops the authenticated user's PUN
  #
  SetEnv OOD_NGINX_URI "<%= @nginx_uri %>"
  <Location "<%= @nginx_uri %>">
    <%- @auth.each do |line| -%>
    <%= line %>
    <%- end -%>

    LuaHookFixups nginx.lua nginx_handler
  </Location>
  <%- end -%>

  <%- if @root_uri -%>
  # Redirect root URI to specified URI
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %>/
  #     #=> <%= _scheme %>://<%= _host %>:<%= _port %><%= @root_uri %>
  #
  RedirectMatch ^/$ "<%= @root_uri %>"
  <%- end -%>

  <%- if @oidc_uri -%>
  # OpenID Connect redirect URI:
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @oidc_uri %>
  #     #=> handled by mod_auth_openidc
  #
  <Location "<%= @oidc_uri %>">
    <%- @auth.each do |line| -%>
    <%= line %>
    <%- end -%>
  </Location>
  <%- end -%>

  <%- if @oidc_discover_uri && @oidc_discover_root -%>
  # Discover URI for OpenID Connect (used for multiple Id Providers):
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @oidc_discover_uri %>
  #     #=> <%= @oidc_discover_root %>/
  #
  Alias "<%= @oidc_discover_uri %>" "<%= @oidc_discover_root %>"
  <Directory "<%= @oidc_discover_root %>">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  <%- end -%>

  <%- if @register_uri && @register_root %>
  # Register and/or unregister the mapping of an authenticated-user to a system-user
  # NB: This is not needed for regular expression mapping
  #
  #     <%= _scheme %>://<%= _host %>:<%= _port %><%= @register_uri %>
  #     #=> <%= @register_root %>/
  #
  Alias "<%= @register_uri %>" "<%= @register_root %>"
  <Directory "<%= @register_root %>">
    Options Indexes FollowSymLinks
    AllowOverride None

    <%- @auth.each do |line| -%>
    <%= line %>
    <%- end -%>
  </Directory>
  <%- end -%>
</VirtualHost>
