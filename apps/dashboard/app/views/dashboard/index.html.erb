<%= render partial: 'shared/welcome' %>

<!--
<div class="xdmod">
    <div id="jobsPanelDiv"></div>
    <div id="centerReportCardPanelDiv"></div>
    <div id="reportThumbnailsPanelDiv"></div>
</div>

-->

    <%# This assumes @motd_file responds to `to_partial_path` %>
    <%# render @motd if @motd %>
<div class="row">
  <div class="col-md-8">
    <div class="xdmod">
      <div id="jobsPanelDiv"></div>
      <div id="centerReportCardPanelDiv"></div>
      <div id="reportThumbnailsPanelDiv"></div>
    </div>
  </div>
  <div class="col-md-4">
    <%# This assumes @motd_file responds to `to_partial_path` %>
    <%= render @motd if @motd %>
  </div>
</div>
<script id="jobs-template" type="text/x-handlebars-template">
<div class="panel panel-default"><div class="panel-body">
  <h4>{{title}}</h4>

  <div class="table-responsive visible-xs-block">
    <table class="table table-striped  table-condensed">
      {{#each results}}
      <tr>
        <td>
          <dl>
            <dt>User</dt>
            <dd>{{name}}</dd>
            <dt>Job ID</dt>
            <dd>{{local_job_id}}</dd>
            <dt>Cluster/Resource</dt>
            <dd>{{resource}}</dd>
            <dt>Start</dt>
            <dd>{{start_time}}</dd>
            <dt>Stop</dt>
            <dd>{{end_time}}</dd>
            <dt>Walltime Used</dt>
            <dd>{{walltime}}</dd>
            <dt>CPU</dt>
            <dd>{{cpu}}</dd>
          </dl>
        </td>
      </tr>
      {{/each}}
    </table>
  </div>

  <table class="table table-striped table-condensed hidden-xs">
    <thead>
      <tr>
        <th>User</th>
        <th>Job ID</th>
        <th>Cluster/Resource</th>
        <th>Start</th>
        <th>End</th>
        <th>Walltime Used</th>
        <th>CPU</th>
      </tr>
    </thead>
    <tbody>
      {{#each results}}
      <tr>
        <td>{{name}}</td>
        <td><a target="_blank" href="{{job_url}}">{{local_job_id}}&nbsp;<i style="display: inline" class="fa fa-external-link-square-alt"></i></a></td>
        <td>{{resource}}</td>
        <td>{{start_time}}</td>
        <td>{{end_time}}</td>
        <td>{{walltime}}</td>
        <td>{{cpu_user}}</td>
      </tr>
      {{/each}}
    </tbody>
  </table>
</div></div>
</script>


<!--
failedRuns red 660
underPerformingRuns: orange  469
inControl: green  0
overPerforming: blue  41


-->

<script id="perf-template" type="text/x-handlebars-template">
<div class="panel panel-default"><div class="panel-body">
  <h4>{{title}}</h4>

  <div class="table-responsive visible-xs-block">
    <table class="table table-striped table-condensed">
      {{#each results}}
      <tr>
        <td>
          <dl>
            <dt>Cluster/Resource</dt>
            <dd>{{resource}}</dd>
            <dt>App Kernel</dt>
            <dd>{{app_kernel}}</dd>
            <dt>Status</dt>
            <dd>
              <div class="progress" style="margin-bottom: 0px;">
                <div class="progress-bar progress-bar-danger" style="width: {{failed_percent}}%">
                  <span class="sr-only">{{failed_percent}}% Failed</span>
                </div>
                <div class="progress-bar progress-bar-warning" style="width: {{underperforming_percent}}%">
                  <span class="sr-only">{{underperforming_percent}}% Underperforming</span>
                </div>
                <div class="progress-bar progress-bar-success" style="width: {{incontrol_percent}}%">
                  <span class="sr-only">{{incontrol_percent}}% In Control</span>
                </div>
                <div class="progress-bar progress-bar-primary" style="width: {{overperforming_percent}}%">
                  <span class="sr-only">{{overperforming_percent}}% Over Performing</span>
                </div>
              </div>
            </dd>
          </dl>
        </td>
      </tr>
      {{/each}}
    </table>
  </div>

  <table class="table table-striped table-condensed hidden-xs">
    <thead>
      <tr>
        <th>Cluster/Resource</th>
        <th>App Kernel</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody>
      {{#each results}}
      <tr>
        <td width="100px">{{resource}}</td>
        <td width="120px"><a target="_blank" href="{{app_kernel_url}}">{{app_kernel}}&nbsp;<i style="display: inline" class="fa fa-external-link-square-alt"></i></a></td>
        <td>
          <div class="progress" style="margin-bottom: 0px;">
            <div class="progress-bar progress-bar-danger" style="width: {{failed_percent}}%">
              <span class="sr-only">{{failed_percent}}% Failed</span>
            </div>
            <div class="progress-bar progress-bar-warning" style="width: {{underperforming_percent}}%">
              <span class="sr-only">{{underperforming_percent}}% Underperforming</span>
            </div>
            <div class="progress-bar progress-bar-success" style="width: {{incontrol_percent}}%">
              <span class="sr-only">{{incontrol_percent}}% In Control</span>
            </div>
            <div class="progress-bar progress-bar-primary" style="width: {{overperforming_percent}}%">
              <span class="sr-only">{{overperforming_percent}}% Over Performing</span>
            </div>
          </div>
        </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
</div></div>
</script>

<script id="report-template" type="text/x-handlebars-template">
<div class="panel panel-default"><div class="panel-body">
  <h4>{{title}}</h4>
  <div class="row">
    {{#each data.queue}}
    <div class="col-md-6 col-xs-12">
      <a target="_blank" href="{{chart_url}}" class="thumbnail">
        <div class="caption text-center"><small>{{chart_title}}</small></div>
        <img class="img-responsive" src="{{thumbnail_src}}" data-src="holder.js/362x214">
      </a>
    </div>
    {{/each}}
  </div>
</div></div>
</script>

<script>
var startOfYear = moment().startOf('year').format("YYYY-MM-DD"),
    thirtyDaysAgo = moment().subtract(30, 'days').format("YYYY-MM-DD"),
    today = moment().format("YYYY-MM-DD");


var jobsUrl = new URL('https://xdmod-test.hpc.osc.edu/rest/v1/warehouse/search/jobs');
jobsUrl.searchParams.set('_dc', Date.now());
jobsUrl.searchParams.set('start_date', thirtyDaysAgo);
jobsUrl.searchParams.set('end_date', today);
jobsUrl.searchParams.set('realm', 'Jobs');
jobsUrl.searchParams.set('limit', 10);
jobsUrl.searchParams.set('start', 0);
jobsUrl.searchParams.set('verbose', true);
jobsUrl.searchParams.set('params', JSON.stringify({}));

$.get(jobsUrl, function(jsonData){
  var template_source = $('#jobs-template').html();
  var template = Handlebars.compile(template_source);
  var helpers = {
    title: function(){
      return "XDMoD - Jobs - " + thirtyDaysAgo + " to " + today;
    },
    start_time: function(){ return moment.unix(this.start_time_ts).format('YY-MM-DD h:mmA'); },
    end_time: function(){ return moment.unix(this.end_time_ts).format('YY-MM-DD h:mmA'); },
    walltime: function(){ return moment.duration(this.end_time_ts - this.start_time_ts).humanize(); },
    job_url: function(){ return "https://xdmod-test.hpc.osc.edu/#job_viewer?action=show&realm=Jobs&jobref=" + this.jobid; }
  };
  $('#jobsPanelDiv').html(template(jsonData, {helpers: helpers}));
});


// perf is from start of the year
var perfUrl = new URL('https://xdmod-test.hpc.osc.edu/rest/v1/app_kernels/performance_map/raw');
perfUrl.searchParams.set('_dc', Date.now());
perfUrl.searchParams.set('start_date', startOfYear);
perfUrl.searchParams.set('end_date', today);

$.get(perfUrl, function(jsonData){
  var template_source = $('#perf-template').html();
  var template = Handlebars.compile(template_source);
  var total_runs = function(obj){
    return obj.failedRuns + obj.inControlRuns + obj.overPerformingRuns + obj.underPerformingRuns;
  };

  var helpers = {
    failed_percent: function(){
      return (this.failedRuns*1.0 / total_runs(this))*100;
    },
    incontrol_percent: function(){
      return (this.inControlRuns*1.0 / total_runs(this))*100;
    },
    overperforming_percent: function(){
      return (this.overPerformingRuns*1.0 / total_runs(this))*100;
    },
    underperforming_percent: function(){
      return (this.underPerformingRuns*1.0 / total_runs(this))*100;
    },
    title: function(){
      return "XDMoD - Center Report Card - " + startOfYear + " to " + today;
    },
    app_kernel_url: function(){
      var link_info = {
        start_date: startOfYear,
        end_date: today,
        resource: this.resource,
        app_kernel: this.app_kernel
      };
      return "https://xdmod-test.hpc.osc.edu/#main_tab_panel:app_kernels:app_kernel_performance_map?ak=" + window.btoa(JSON.stringify(link_info));
    }
  };
  $('#centerReportCardPanelDiv').html(template(jsonData, {helpers: helpers}));
});


var reportUrl = new URL('https://xdmod-test.hpc.osc.edu/rest/v1/dashboard/rolereport');
reportUrl.searchParams.set('_dc', Date.now());

$.get(reportUrl, function(jsondata){
  var template_source = $('#report-template').html(),
      template = Handlebars.compile(template_source),

      // TODO: add optional start/end date strings with query params:
      // url.searchParams.set('start', '2019-10-22')
      // url.searchParams.set('end', '2019-11-21')
      // url.searchParams.set('type', 'cached')
      // title should update then as necessary...tied to a dropdown

      helpers = {
        thumbnail_src: function(){
          // TODO: polyfills for URL and URLSearchParams
          var url = new URL("https://xdmod-test.hpc.osc.edu"+ this.thumbnail_link);

          // TODO: should token be set to something?
          url.searchParams.delete('token');

          return url.toString();
        },
        chart_url: function(){
          var config_link = {};
          var config = this.chart_id;
          for (var key in this.chart_id){
            if (key === 'data_series') {
              let data_series = {};
              data_series.data = config[key];
              data_series.total = config[key].length;
              config_link.data_series = data_series;
            } else if (key === 'global_filters') {
              config_link[key] = config[key];
            } else {
              config_link[key] = config[key];
            }
          }
          //FIXME: config_link.start_date and config_link.end_date already should exist...
          // so what is the point of below?
//
//          if (!(timeframe.start_date === null && timeframe.end_date === null)) {
//            config_link.start_date = timeframe.start_date;
//            config_link.end_date = timeframe.end_date;
//            config_link.timeframe_label = 'User Defined';
//            config_data.start_date = timeframe.start_date;
//            config_data.end_date = timeframe.end_date;
//            config_data.timeframe_label = 'User Defined';
//
//          } else {
//            var ranges = getDateRanges();
//            var timeframeRange = filterRange(ranges, config.timeframe_label);
//            config_link.start_date = timeframeRange.start_date;
//            config_link.end_date = timeframeRange.end_date;
//            config_data.start_date = timeframeRange.start_date;
//            config_data.end_date = timeframeRange.end_date;
//          }

          return "https://xdmod-test.hpc.osc.edu/#main_tab_panel:metric_explorer?config=" + window.btoa(JSON.stringify(config_link));
        },
        title: function(){
          // FIXME: this is incorrect time range
          return "XDMoD - Summary Charts"; //FIXME: + startOfYear + " to " + today;
        }
      };


  // TODO: let user vary the start and stop date range
  $('#reportThumbnailsPanelDiv').html(template(jsondata, {helpers: helpers}));
});


// TODO: handle errors etc.
// TODO: testing client side integration using automated test! webmock FTW. Where vue would be nice :-P
</script>
