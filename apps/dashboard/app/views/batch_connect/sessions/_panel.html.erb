<div id="<%= session.id %>" class="panel panel-<%= status_context(session) %> session-panel" data-hash='<%= session.to_hash %>'>
  <div class="panel-heading">
    <h1 class="panel-title">
      <%= link_to(content_tag(:strong, session.title), new_batch_connect_session_context_path(token: session.token)) %>
      <%= " (" + session.job_id.to_s + ")" %>
      <div class="pull-right">
        <%= session_panel(session) %>
      </div>
      <div class="clearfix"></div>
    </h1>
  </div>
  <div class="panel-body">
    <div>
      <div><%= delete_session_button(session) %></div>

      <%# host(session) %>
      <% if ::Configuration.ood_bc_ssh_to_compute_node %>
      <% if session.running? %>
      <p><strong><%= t('dashboard.batch_connect_sessions_stats_host') %></strong> <%= link_to_session_host(session) %></p>
      <% end %>
      <% else %>
      <% if session.running? %>
      <p><strong><%= t('dashboard.batch_connect_sessions_stats_host') %></strong> <%= concat session.connect.host || t('dashboard.batch_connect_sessions_stats_undetermined_host') %></p>
      <% end %>
      <% end %>
      <%# end %>

      <%# created(session) %>
      <p><strong><%= t('dashboard.batch_connect_sessions_stats_created_at') %></strong> <%= Time.at(session.created_at).localtime.strftime("%Y-%m-%d %H:%M:%S %Z") %></p>
      <%# end %>

      <%# time(session) %>
      <p>
        <% if session.starting? || session.running? %>
        <% if session.info.wallclock_limit && session.info.wallclock_time %>
        <strong><%= t('dashboard.batch_connect_sessions_stats_time_remaining') %></strong> <%= distance_of_time_in_words(session.info.wallclock_limit - session.info.wallclock_time, 0, false, :only => [:minutes, :hours], :accumulate_on => :hours) %>
        <% elsif session.info.wallclock_time %>
        <strong><%= t('dashboard.batch_connect_sessions_stats_time_used') %></strong> <%= distance_of_time_in_words(session.info.wallclock_time, 0, false, :only => [:minutes, :hours], :accumulate_on => :hours) %>
        <% end %>
        <% else %>
        <% if session.info.wallclock_limit %>
        <strong><%= t('dashboard.batch_connect_sessions_stats_time_requested') %></strong> <%= distance_of_time_in_words(session.info.wallclock_limit, 0, false, :only => [:minutes, :hours], :accumulate_on => :hours) %>
        <% end %>
        <% end %>
      </p>
      <%# end %>

      <%# id(session) %>
      <p><strong><%= t('dashboard.batch_connect_sessions_stats_session_id') %></strong> <%= link_to_session_id(session) %></p>
      <%# end %>
    </div>

    <div>
      <%
      if session.running?
        if session.view
          views = { partial: "custom", locals: { view: session.view, connect: session.connect } }
        else
          if session.script_type == "vnc"
            views = []
            views << { title: "noVNC Connection",    partial: "novnc",      locals: { connect: session.connect, app_title: session.title } }
            views << { title: "Native Instructions", partial: "native_vnc", locals: { connect: session.connect } } if ENV["ENABLE_NATIVE_VNC"]
          else
            views = { partial: "missing_connection" }
          end
        end
      elsif session.starting?
        views = { partial: "starting" }
      elsif session.queued?
        views = { partial: "queued" }
      else
        views = { partial: "bad" }
      end
      %>
      <%= connection_tabs(session.id, views) %>
    </div>
  </div>
</div>